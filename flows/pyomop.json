{
  "name": "PyOmop Example",
  "description": "An example data flow using pyomop to interact with a OMOP CDM.",
  "edges": [
    {
      "id": "reactflow__edge-d67e501f-98fc-476e-b7b6-182fe19407fasource_d67e501f-98fc-476e-b7b6-182fe19407fa_object-0bec4b6a-4381-42cf-a3c9-74593e877af2target_0bec4b6a-4381-42cf-a3c9-74593e877af2_any",
      "source": "d67e501f-98fc-476e-b7b6-182fe19407fa",
      "target": "0bec4b6a-4381-42cf-a3c9-74593e877af2",
      "sourceHandle": "source_d67e501f-98fc-476e-b7b6-182fe19407fa_object",
      "targetHandle": "target_0bec4b6a-4381-42cf-a3c9-74593e877af2_any"
    },
    {
      "id": "reactflow__edge-0bec4b6a-4381-42cf-a3c9-74593e877af2source_0bec4b6a-4381-42cf-a3c9-74593e877af2_object-14578cf3-e1f9-4d66-80f2-5f5b054348dbtarget_14578cf3-e1f9-4d66-80f2-5f5b054348db_any",
      "source": "0bec4b6a-4381-42cf-a3c9-74593e877af2",
      "target": "14578cf3-e1f9-4d66-80f2-5f5b054348db",
      "sourceHandle": "source_0bec4b6a-4381-42cf-a3c9-74593e877af2_object",
      "targetHandle": "target_14578cf3-e1f9-4d66-80f2-5f5b054348db_any"
    },
    {
      "id": "reactflow__edge-0bec4b6a-4381-42cf-a3c9-74593e877af2source_0bec4b6a-4381-42cf-a3c9-74593e877af2_object-21060c89-4111-412b-9994-38d8a5679b04target_21060c89-4111-412b-9994-38d8a5679b04_any",
      "source": "0bec4b6a-4381-42cf-a3c9-74593e877af2",
      "target": "21060c89-4111-412b-9994-38d8a5679b04",
      "sourceHandle": "source_0bec4b6a-4381-42cf-a3c9-74593e877af2_object",
      "targetHandle": "target_21060c89-4111-412b-9994-38d8a5679b04_any"
    }
  ],
  "nodes": [
    {
      "id": "0bec4b6a-4381-42cf-a3c9-74593e877af2",
      "data": {
        "name": "InsertPersonRecords",
        "description": "Insert person table records",
        "python_code": "async def exec(myinput):\n  tenant_configs = myinput[\"GetDBCredentials\"].result\n  \n  cdm = CdmEngineFactory(\n    db='pgsql', \n    host=tenant_configs.host, \n    port=tenant_configs.port,\n    user=tenant_configs.adminUser,\n    pw=tenant_configs.adminPassword.get_secret_value(),\n    name=tenant_configs.databaseName, \n    schema='demo_cdm'\n  )\n  \n  engine = cdm.engine\n\n  async with cdm.session() as session:\n    async with session.begin():\n      session.add(\n          Person(\n              person_id=100,\n              gender_concept_id=8532,\n              gender_source_concept_id=8512,\n              year_of_birth=1980,\n              month_of_birth=1,\n              day_of_birth=1,\n              birth_datetime=datetime.datetime(1980, 1, 1),\n              race_concept_id=8552,\n              race_source_concept_id=8552,\n              ethnicity_concept_id=38003564,\n              ethnicity_source_concept_id=38003564,\n          )\n      )\n\n      session.add(\n          Person(\n              person_id=101,\n              gender_concept_id=8532,\n              gender_source_concept_id=8512,\n              year_of_birth=1980,\n              month_of_birth=1,\n              day_of_birth=1,\n              birth_datetime=datetime.datetime(1980, 1, 1),\n              race_concept_id=8552,\n              race_source_concept_id=8552,\n              ethnicity_concept_id=38003564,\n              ethnicity_source_concept_id=38003564,\n          )\n      )\n    await session.commit()\n\n    await session.close()\n  await engine.dispose()\n    \n  return cdm"
      },
      "type": "python_node",
      "width": 350,
      "height": 210,
      "dragging": false,
      "position": { "x": -1750, "y": -280 },
      "selected": false,
      "dragHandle": "",
      "sourcePosition": "right",
      "targetPosition": "left",
      "positionAbsolute": { "x": -1750, "y": -280 }
    },
    {
      "id": "d67e501f-98fc-476e-b7b6-182fe19407fa",
      "data": {
        "name": "GetDBCredentials",
        "description": "Get database credentials",
        "python_code": "def exec(myinput):\n  dbdao = DBDao(use_cache_db=False, database_code=\"demo_database\")\n  return dbdao.tenant_configs"
      },
      "type": "python_node",
      "width": 350,
      "height": 210,
      "dragging": false,
      "position": { "x": -2250, "y": -280 },
      "selected": false,
      "dragHandle": "",
      "sourcePosition": "right",
      "targetPosition": "left",
      "positionAbsolute": { "x": -2250, "y": -280 }
    },
    {
      "id": "14578cf3-e1f9-4d66-80f2-5f5b054348db",
      "data": {
        "name": "QueryPersonRecords",
        "description": "Execute query from QueryLibrary",
        "python_code": "async def exec(myinput):\n  cdm = myinput[\"InsertPersonRecords\"].result\n  \n  engine = cdm.engine\n\n  vec = CdmVector()\n\n  # https://github.com/OHDSI/QueryLibrary/blob/master/inst/shinyApps/QueryLibrary/queries/person/PE02.md\n  async with cdm.session() as session:\n    result = await vec.query_library(cdm, resource='person', query_name='PE02')\n    df = vec.result_to_df(result)\n\n    await session.close()\n  await engine.dispose()\n    \n  return df"
      },
      "type": "python_node",
      "width": 354,
      "height": 214,
      "dragging": false,
      "position": { "x": -1180, "y": -280 },
      "selected": false,
      "dragHandle": "",
      "sourcePosition": "right",
      "targetPosition": "left",
      "positionAbsolute": { "x": -1180, "y": -280 }
    },
    {
      "id": "21060c89-4111-412b-9994-38d8a5679b04",
      "data": {
        "name": "SelectFromPersonTable",
        "description": "Get gender concept id for person_id=100",
        "python_code": "async def exec(myinput):\n  cdm = myinput[\"InsertPersonRecords\"].result\n  engine = cdm.engine\n  async with cdm.session() as session:\n    stmt = select(Person).where(Person.person_id == 100)\n    result = await session.execute(stmt)\n    person_obj = result.scalars().all()[0]\n\n    await session.close()\n  await engine.dispose()\n    \n  return person_obj.gender_concept_id"
      },
      "type": "python_node",
      "width": 350,
      "height": 210,
      "dragging": false,
      "position": { "x": -1180, "y": -620 },
      "selected": false,
      "dragHandle": "",
      "sourcePosition": "right",
      "targetPosition": "left",
      "positionAbsolute": { "x": -1180, "y": -620 }
    }
  ],
  "variables": [],
  "importLibs": [
    "from _shared_flow_utils.dao.DBDao import DBDao",
    "import asyncio",
    "import datetime",
    "from sqlalchemy.future import select",
    "from pyomop import CdmEngineFactory, CdmVocabulary, CdmVector",
    "from pyomop.cdm54 import Person, Cohort, Vocabulary, Base"
  ]
}
